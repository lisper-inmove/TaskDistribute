apiVersion: batch/v1
kind: Job
metadata:
  name: task-distribute-consumer
  namespace: test
spec:
  template:
    spec:
      containers:
      - name: consumer
        image: mh.com:8890/test/task-distribute:v1.0
        imagePullPolicy: Always
        command: ["python"]
        args:
        - "src/scheduler/main.py"
        env:
        - name: MQ_TYPE
          value: 'REDIS_CLUSTER'
        - name: CONSUMER_RANGE
          value: '1:10'
        - name: MONGODB_CLUSTER_NODES
          valueFrom:
            configMapKeyRef:
              name: mongodb
              key: address
        - name: MONGODB_CLUSTER_AUTH_DB
          valueFrom:
            configMapKeyRef:
              name: mongodb
              key: auth_db
        - name: MONGODB_CLUSTER_USER
          valueFrom:
            configMapKeyRef:
              name: mongodb
              key: username
        - name: MONGODB_CLUSTER_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongodb-secret
              key: password
        - name: MONGODB_CLUSTER_REPLICA_SET
          valueFrom:
            configMapKeyRef:
              name: mongodb
              key: replica_set
        - name: R_ENABLE_REPLICA
          valueFrom:
            configMapKeyRef:
              name: mongodb
              key: enable_replica

        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: redis-cluster
              key: host
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: redis-cluster
              key: port
        - name: REDIS_STARTUP_NODES
          valueFrom:
            configMapKeyRef:
              name: redis-cluster
              key: redis_startup_nodes
        - name: REDIS_CLUSTER_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-cluster-secret
              key: password

        - name: REDIS_LOCK_CONFIG
          valueFrom:
            configMapKeyRef:
              name: redis-lock
              key: redis_lock_config
        - name: REDIS_LOCK_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-lock-secret
              key: password
      restartPolicy: Never
  backoffLimit: 4
